[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/accepted_languages.js",
    "content": "export default function acceptedLanguages(string = \"\") {\n  if (typeof string !== \"string\") {\n    throw new TypeError(\"Argument must be a string\");\n  }\n  const tokens = string.split(\",\").map(t => t.trim());\n  return tokens.filter(t => t !== \"\").map(t => t.split(\";\")[0]);\n}\n",
    "static": true,
    "longname": "/c/Users/Stas/Mozilla/fluent/fluent.js/fluent-langneg/src/accepted_languages.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "acceptedLanguages",
    "memberof": "src/accepted_languages.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/accepted_languages.js~acceptedLanguages",
    "access": "public",
    "export": true,
    "importPath": "@fluent/langneg/src/accepted_languages.js",
    "importStyle": "acceptedLanguages",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "string",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "",
        "defaultValue": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "src/index.js",
    "content": "/*\n * @module fluent-langneg\n * @overview\n *\n * `fluent-langneg` provides language negotiation API that fits into\n * Project Fluent localization composition and fallbacking strategy.\n *\n */\n\nexport { default as negotiateLanguages } from \"./negotiate_languages\";\nexport { default as acceptedLanguages } from \"./accepted_languages\";\n",
    "static": true,
    "longname": "/c/Users/Stas/Mozilla/fluent/fluent.js/fluent-langneg/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "file",
    "name": "src/locale.js",
    "content": "/* eslint no-magic-numbers: 0 */\n\nimport { getLikelySubtagsMin } from \"./subtags\";\n\nconst languageCodeRe = \"([a-z]{2,3}|\\\\*)\";\nconst scriptCodeRe = \"(?:-([a-z]{4}|\\\\*))\";\nconst regionCodeRe = \"(?:-([a-z]{2}|\\\\*))\";\nconst variantCodeRe = \"(?:-(([0-9][a-z0-9]{3}|[a-z0-9]{5,8})|\\\\*))\";\n\n/**\n * Regular expression splitting locale id into four pieces:\n *\n * Example: `en-Latn-US-macos`\n *\n * language: en\n * script:   Latn\n * region:   US\n * variant:  macos\n *\n * It can also accept a range `*` character on any position.\n */\nconst localeRe = new RegExp(\n  `^${languageCodeRe}${scriptCodeRe}?${regionCodeRe}?${variantCodeRe}?$`, \"i\");\n\nexport const localeParts = [\"language\", \"script\", \"region\", \"variant\"];\n\nexport default class Locale {\n  /**\n   * Parses a locale id using the localeRe into an array with four elements.\n   *\n   * If the second argument `range` is set to true, it places range `*` char\n   * in place of any missing piece.\n   *\n   * It also allows skipping the script section of the id, so `en-US` is\n   * properly parsed as `en-*-US-*`.\n   */\n  constructor(locale) {\n    const result = localeRe.exec(locale.replace(/_/g, \"-\"));\n    if (!result) {\n      this.isWellFormed = false;\n      return;\n    }\n\n    let [, language, script, region, variant] = result;\n\n    if (language) {\n      this.language = language.toLowerCase();\n    }\n    if (script) {\n      this.script = script[0].toUpperCase() + script.slice(1);\n    }\n    if (region) {\n      this.region = region.toUpperCase();\n    }\n    this.variant = variant;\n    this.isWellFormed = true;\n  }\n\n  isEqual(locale) {\n    return localeParts.every(part => this[part] === locale[part]);\n  }\n\n  matches(locale, thisRange = false, otherRange = false) {\n    return localeParts.every(part => {\n      return ((thisRange && this[part] === undefined) ||\n              (otherRange && locale[part] === undefined) ||\n              this[part] === locale[part]);\n    });\n  }\n\n  toString() {\n    return localeParts\n      .map(part => this[part])\n      .filter(part => part !== undefined)\n      .join(\"-\");\n  }\n\n  clearVariants() {\n    this.variant = undefined;\n  }\n\n  clearRegion() {\n    this.region = undefined;\n  }\n\n  addLikelySubtags() {\n    const newLocale = getLikelySubtagsMin(this.toString().toLowerCase());\n\n    if (newLocale) {\n      localeParts.forEach(part => this[part] = newLocale[part]);\n      return true;\n    }\n    return false;\n  }\n}\n",
    "static": true,
    "longname": "/c/Users/Stas/Mozilla/fluent/fluent.js/fluent-langneg/src/locale.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "languageCodeRe",
    "memberof": "src/locale.js",
    "static": true,
    "longname": "src/locale.js~languageCodeRe",
    "access": "public",
    "export": false,
    "importPath": "@fluent/langneg/src/locale.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "scriptCodeRe",
    "memberof": "src/locale.js",
    "static": true,
    "longname": "src/locale.js~scriptCodeRe",
    "access": "public",
    "export": false,
    "importPath": "@fluent/langneg/src/locale.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "regionCodeRe",
    "memberof": "src/locale.js",
    "static": true,
    "longname": "src/locale.js~regionCodeRe",
    "access": "public",
    "export": false,
    "importPath": "@fluent/langneg/src/locale.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "variantCodeRe",
    "memberof": "src/locale.js",
    "static": true,
    "longname": "src/locale.js~variantCodeRe",
    "access": "public",
    "export": false,
    "importPath": "@fluent/langneg/src/locale.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "localeRe",
    "memberof": "src/locale.js",
    "static": true,
    "longname": "src/locale.js~localeRe",
    "access": "public",
    "export": false,
    "importPath": "@fluent/langneg/src/locale.js",
    "importStyle": null,
    "description": "Regular expression splitting locale id into four pieces:\n\nExample: `en-Latn-US-macos`\n\nlanguage: en\nscript:   Latn\nregion:   US\nvariant:  macos\n\nIt can also accept a range `*` character on any position.",
    "lineNumber": 22,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "localeParts",
    "memberof": "src/locale.js",
    "static": true,
    "longname": "src/locale.js~localeParts",
    "access": "public",
    "export": true,
    "importPath": "@fluent/langneg/src/locale.js",
    "importStyle": "{localeParts}",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "class",
    "name": "Locale",
    "memberof": "src/locale.js",
    "static": true,
    "longname": "src/locale.js~Locale",
    "access": "public",
    "export": true,
    "importPath": "@fluent/langneg/src/locale.js",
    "importStyle": "Locale",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 59,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/locale.js~Locale",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/locale.js~Locale#constructor",
    "access": "public",
    "description": "Parses a locale id using the localeRe into an array with four elements.\n\nIf the second argument `range` is set to true, it places range `*` char\nin place of any missing piece.\n\nIt also allows skipping the script section of the id, so `en-US` is\nproperly parsed as `en-*-US-*`.",
    "lineNumber": 37
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "isWellFormed",
    "memberof": "src/locale.js~Locale",
    "static": false,
    "longname": "src/locale.js~Locale#isWellFormed",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "language",
    "memberof": "src/locale.js~Locale",
    "static": false,
    "longname": "src/locale.js~Locale#language",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "script",
    "memberof": "src/locale.js~Locale",
    "static": false,
    "longname": "src/locale.js~Locale#script",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "region",
    "memberof": "src/locale.js~Locale",
    "static": false,
    "longname": "src/locale.js~Locale#region",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "variant",
    "memberof": "src/locale.js~Locale",
    "static": false,
    "longname": "src/locale.js~Locale#variant",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "isEqual",
    "memberof": "src/locale.js~Locale",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/locale.js~Locale#isEqual",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "params": [
      {
        "name": "locale",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "matches",
    "memberof": "src/locale.js~Locale",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/locale.js~Locale#matches",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [
      {
        "name": "locale",
        "types": [
          "*"
        ]
      },
      {
        "name": "thisRange",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      },
      {
        "name": "otherRange",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "toString",
    "memberof": "src/locale.js~Locale",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/locale.js~Locale#toString",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "clearVariants",
    "memberof": "src/locale.js~Locale",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/locale.js~Locale#clearVariants",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "clearRegion",
    "memberof": "src/locale.js~Locale",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/locale.js~Locale#clearRegion",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "addLikelySubtags",
    "memberof": "src/locale.js~Locale",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/locale.js~Locale#addLikelySubtags",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "src/matches.js",
    "content": "/* eslint no-magic-numbers: 0 */\n/* eslint complexity: [\"error\", { \"max\": 27 }] */\n\nimport Locale from \"./locale\";\n\n/**\n * Negotiates the languages between the list of requested locales against\n * a list of available locales.\n *\n * The algorithm is based on the BCP4647 3.3.2 Extended Filtering algorithm,\n * with several modifications:\n *\n *  1) available locales are treated as ranges\n *\n *    This change allows us to match a more specific request against\n *    more generic available locale.\n *\n *    For example, if the available locale list provides locale `en`,\n *    and the requested locale is `en-US`, we treat the available locale as\n *    a locale that matches all possible english requests.\n *\n *    This means that we expect available locale ID to be as precize as\n *    the matches they want to cover.\n *\n *    For example, if there is only `sr` available, it's ok to list\n *    it in available locales. But once the available locales has both,\n *    Cyrl and Latn variants, the locale IDs should be `sr-Cyrl` and `sr-Latn`\n *    to avoid any `sr-*` request to match against whole `sr` range.\n *\n *    What it does ([requested] * [available] = [supported]):\n *\n *    ['en-US'] * ['en'] = ['en']\n *\n *  2) likely subtags from LDML 4.3 Likely Subtags has been added\n *\n *    The most obvious likely subtag that can be computed is a duplication\n *    of the language field onto region field (`fr` => `fr-FR`).\n *\n *    On top of that, likely subtags may use a list of mappings, that\n *    allow the algorithm to handle non-obvious matches.\n *    For example, making sure that we match `en` to `en-US` or `sr` to\n *    `sr-Cyrl`, while `sr-RU` to `sr-Latn-RU`.\n *\n *    This list can be taken directly from CLDR Supplemental Data.\n *\n *    What it does ([requested] * [available] = [supported]):\n *\n *    ['fr'] * ['fr-FR'] = ['fr-FR']\n *    ['en'] * ['en-US'] = ['en-US']\n *    ['sr'] * ['sr-Latn', 'sr-Cyrl'] = ['sr-Cyrl']\n *\n *  3) variant/region range check has been added\n *\n *    Lastly, the last form of check is against the requested locale ID\n *    but with the variant/region field replaced with a `*` range.\n *\n *    The rationale here laid out in LDML 4.4 Language Matching:\n *      \"(...) normally the fall-off between the user's languages is\n *      substantially greated than regional variants.\"\n *\n *    In other words, if we can't match for the given region, maybe\n *    we can match for the same language/script but other region, and\n *    it will in most cases be preferred over falling back on the next\n *    language.\n *\n *    What it does ([requested] * [available] = [supported]):\n *\n *    ['en-AU'] * ['en-US'] = ['en-US']\n *    ['sr-RU'] * ['sr-Latn-RO'] = ['sr-Latn-RO'] // sr-RU -> sr-Latn-RU\n *\n *    It works similarly to getParentLocales algo, except that we stop\n *    after matching against variant/region ranges and don't try to match\n *    ignoring script ranges. That means that `sr-Cyrl` will never match\n *    against `sr-Latn`.\n */\nexport default function filterMatches(\n  requestedLocales, availableLocales, strategy\n) {\n  /* eslint complexity: [\"error\", 31]*/\n  const supportedLocales = new Set();\n\n  const availableLocalesMap = new Map();\n\n  for (let locale of availableLocales) {\n    let newLocale = new Locale(locale);\n    if (newLocale.isWellFormed) {\n      availableLocalesMap.set(locale, new Locale(locale));\n    }\n  }\n\n  outer:\n  for (const reqLocStr of requestedLocales) {\n    const reqLocStrLC = reqLocStr.toLowerCase();\n    const requestedLocale = new Locale(reqLocStrLC);\n\n    if (requestedLocale.language === undefined) {\n      continue;\n    }\n\n    // 1) Attempt to make an exact match\n    // Example: `en-US` === `en-US`\n    for (const key of availableLocalesMap.keys()) {\n      if (reqLocStrLC === key.toLowerCase()) {\n        supportedLocales.add(key);\n        availableLocalesMap.delete(key);\n        if (strategy === \"lookup\") {\n          return Array.from(supportedLocales);\n        } else if (strategy === \"filtering\") {\n          continue;\n        } else {\n          continue outer;\n        }\n      }\n    }\n\n\n    // 2) Attempt to match against the available range\n    // This turns `en` into `en-*-*-*` and `en-US` into `en-*-US-*`\n    // Example: ['en-US'] * ['en'] = ['en']\n    for (const [key, availableLocale] of availableLocalesMap.entries()) {\n      if (availableLocale.matches(requestedLocale, true, false)) {\n        supportedLocales.add(key);\n        availableLocalesMap.delete(key);\n        if (strategy === \"lookup\") {\n          return Array.from(supportedLocales);\n        } else if (strategy === \"filtering\") {\n          continue;\n        } else {\n          continue outer;\n        }\n      }\n    }\n\n    // 3) Attempt to retrieve a maximal version of the requested locale ID\n    // If data is available, it'll expand `en` into `en-Latn-US` and\n    // `zh` into `zh-Hans-CN`.\n    // Example: ['en'] * ['en-GB', 'en-US'] = ['en-US']\n    if (requestedLocale.addLikelySubtags()) {\n      for (const [key, availableLocale] of availableLocalesMap.entries()) {\n        if (availableLocale.matches(requestedLocale, true, false)) {\n          supportedLocales.add(key);\n          availableLocalesMap.delete(key);\n          if (strategy === \"lookup\") {\n            return Array.from(supportedLocales);\n          } else if (strategy === \"filtering\") {\n            continue;\n          } else {\n            continue outer;\n          }\n        }\n      }\n    }\n\n    // 4) Attempt to look up for a different variant for the same locale ID\n    // Example: ['en-US-mac'] * ['en-US-win'] = ['en-US-win']\n    requestedLocale.clearVariants();\n\n    for (const [key, availableLocale] of availableLocalesMap.entries()) {\n      if (availableLocale.matches(requestedLocale, true, true)) {\n        supportedLocales.add(key);\n        availableLocalesMap.delete(key);\n        if (strategy === \"lookup\") {\n          return Array.from(supportedLocales);\n        } else if (strategy === \"filtering\") {\n          continue;\n        } else {\n          continue outer;\n        }\n      }\n    }\n\n    // 5) Attempt to match against the likely subtag without region\n    // In the example below, addLikelySubtags will turn\n    // `zh-Hant` into `zh-Hant-TW` giving `zh-TW` priority match\n    // over `zh-CN`.\n    //\n    // Example: ['zh-Hant-HK'] * ['zh-TW', 'zh-CN'] = ['zh-TW']\n    requestedLocale.clearRegion();\n\n    if (requestedLocale.addLikelySubtags()) {\n      for (const [key, availableLocale] of availableLocalesMap.entries()) {\n        if (availableLocale.matches(requestedLocale, true, false)) {\n          supportedLocales.add(key);\n          availableLocalesMap.delete(key);\n          if (strategy === \"lookup\") {\n            return Array.from(supportedLocales);\n          } else if (strategy === \"filtering\") {\n            continue;\n          } else {\n            continue outer;\n          }\n        }\n      }\n    }\n\n    // 6) Attempt to look up for a different region for the same locale ID\n    // Example: ['en-US'] * ['en-AU'] = ['en-AU']\n    requestedLocale.clearRegion();\n\n    for (const [key, availableLocale] of availableLocalesMap.entries()) {\n      if (availableLocale.matches(requestedLocale, true, true)) {\n        supportedLocales.add(key);\n        availableLocalesMap.delete(key);\n        if (strategy === \"lookup\") {\n          return Array.from(supportedLocales);\n        } else if (strategy === \"filtering\") {\n          continue;\n        } else {\n          continue outer;\n        }\n      }\n    }\n  }\n\n  return Array.from(supportedLocales);\n}\n",
    "static": true,
    "longname": "/c/Users/Stas/Mozilla/fluent/fluent.js/fluent-langneg/src/matches.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "function",
    "name": "filterMatches",
    "memberof": "src/matches.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/matches.js~filterMatches",
    "access": "public",
    "export": true,
    "importPath": "@fluent/langneg/src/matches.js",
    "importStyle": "filterMatches",
    "description": "Negotiates the languages between the list of requested locales against\na list of available locales.\n\nThe algorithm is based on the BCP4647 3.3.2 Extended Filtering algorithm,\nwith several modifications:\n\n 1) available locales are treated as ranges\n\n   This change allows us to match a more specific request against\n   more generic available locale.\n\n   For example, if the available locale list provides locale `en`,\n   and the requested locale is `en-US`, we treat the available locale as\n   a locale that matches all possible english requests.\n\n   This means that we expect available locale ID to be as precize as\n   the matches they want to cover.\n\n   For example, if there is only `sr` available, it's ok to list\n   it in available locales. But once the available locales has both,\n   Cyrl and Latn variants, the locale IDs should be `sr-Cyrl` and `sr-Latn`\n   to avoid any `sr-*` request to match against whole `sr` range.\n\n   What it does ([requested] * [available] = [supported]):\n\n   ['en-US'] * ['en'] = ['en']\n\n 2) likely subtags from LDML 4.3 Likely Subtags has been added\n\n   The most obvious likely subtag that can be computed is a duplication\n   of the language field onto region field (`fr` => `fr-FR`).\n\n   On top of that, likely subtags may use a list of mappings, that\n   allow the algorithm to handle non-obvious matches.\n   For example, making sure that we match `en` to `en-US` or `sr` to\n   `sr-Cyrl`, while `sr-RU` to `sr-Latn-RU`.\n\n   This list can be taken directly from CLDR Supplemental Data.\n\n   What it does ([requested] * [available] = [supported]):\n\n   ['fr'] * ['fr-FR'] = ['fr-FR']\n   ['en'] * ['en-US'] = ['en-US']\n   ['sr'] * ['sr-Latn', 'sr-Cyrl'] = ['sr-Cyrl']\n\n 3) variant/region range check has been added\n\n   Lastly, the last form of check is against the requested locale ID\n   but with the variant/region field replaced with a `*` range.\n\n   The rationale here laid out in LDML 4.4 Language Matching:\n     \"(...) normally the fall-off between the user's languages is\n     substantially greated than regional variants.\"\n\n   In other words, if we can't match for the given region, maybe\n   we can match for the same language/script but other region, and\n   it will in most cases be preferred over falling back on the next\n   language.\n\n   What it does ([requested] * [available] = [supported]):\n\n   ['en-AU'] * ['en-US'] = ['en-US']\n   ['sr-RU'] * ['sr-Latn-RO'] = ['sr-Latn-RO'] // sr-RU -> sr-Latn-RU\n\n   It works similarly to getParentLocales algo, except that we stop\n   after matching against variant/region ranges and don't try to match\n   ignoring script ranges. That means that `sr-Cyrl` will never match\n   against `sr-Latn`.",
    "lineNumber": 76,
    "params": [
      {
        "name": "requestedLocales",
        "types": [
          "*"
        ]
      },
      {
        "name": "availableLocales",
        "types": [
          "*"
        ]
      },
      {
        "name": "strategy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "file",
    "name": "src/negotiate_languages.js",
    "content": "import filterMatches from \"./matches\";\n\nfunction GetOption(options, property, type, values, fallback) {\n  let value = options[property];\n\n  if (value !== undefined) {\n    if (type === \"boolean\") {\n      value = new Boolean(value);\n    } else if (type === \"string\") {\n      value = String(value);\n    }\n\n    if (values !== undefined && values.indexOf(value) === -1) {\n      throw new Error(\"Invalid option value\");\n    }\n\n    return value;\n  }\n\n  return fallback;\n}\n\n/**\n * Negotiates the languages between the list of requested locales against\n * a list of available locales.\n *\n * It accepts three arguments:\n *\n *   requestedLocales:\n *     an Array of strings with BCP47 locale IDs sorted\n *     according to user preferences.\n *\n *   availableLocales:\n *     an Array of strings with BCP47 locale IDs of locale for which\n *     resources are available. Unsorted.\n *\n *   options:\n *     An object with the following, optional keys:\n *\n *       strategy: 'filtering' (default) | 'matching' | 'lookup'\n *\n *       defaultLocale:\n *         a string with BCP47 locale ID to be used\n *         as a last resort locale.\n *\n *\n * It returns an Array of strings with BCP47 locale IDs sorted according to the\n * user preferences.\n *\n * The exact list will be selected differently depending on the strategy:\n *\n *   'filtering': (default)\n *     In the filtering strategy, the algorithm will attempt to match\n *     as many keys in the available locales in order of the requested locales.\n *\n *   'matching':\n *     In the matching strategy, the algorithm will attempt to find the\n *     best possible match for each element of the requestedLocales list.\n *\n *   'lookup':\n *     In the lookup strategy, the algorithm will attempt to find a single\n *     best available locale based on the requested locales list.\n *\n *     This strategy requires defaultLocale option to be set.\n */\nexport default function negotiateLanguages(\n  requestedLocales,\n  availableLocales,\n  options = {}\n) {\n\n  const defaultLocale = GetOption(options, \"defaultLocale\", \"string\");\n  const strategy = GetOption(options, \"strategy\", \"string\",\n    [\"filtering\", \"matching\", \"lookup\"], \"filtering\");\n\n  if (strategy === \"lookup\" && !defaultLocale) {\n    throw new Error(\"defaultLocale cannot be undefined for strategy `lookup`\");\n  }\n\n  const resolvedReqLoc = Array.from(Object(requestedLocales)).map(loc => {\n    return String(loc);\n  });\n  const resolvedAvailLoc = Array.from(Object(availableLocales)).map(loc => {\n    return String(loc);\n  });\n\n  const supportedLocales = filterMatches(\n    resolvedReqLoc,\n    resolvedAvailLoc, strategy\n  );\n\n  if (strategy === \"lookup\") {\n    if (supportedLocales.length === 0) {\n      supportedLocales.push(defaultLocale);\n    }\n  } else if (defaultLocale && !supportedLocales.includes(defaultLocale)) {\n    supportedLocales.push(defaultLocale);\n  }\n  return supportedLocales;\n}\n",
    "static": true,
    "longname": "/c/Users/Stas/Mozilla/fluent/fluent.js/fluent-langneg/src/negotiate_languages.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 77,
    "kind": "function",
    "name": "GetOption",
    "memberof": "src/negotiate_languages.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/negotiate_languages.js~GetOption",
    "access": "public",
    "export": false,
    "importPath": "@fluent/langneg/src/negotiate_languages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      },
      {
        "name": "property",
        "types": [
          "*"
        ]
      },
      {
        "name": "type",
        "types": [
          "*"
        ]
      },
      {
        "name": "values",
        "types": [
          "*"
        ]
      },
      {
        "name": "fallback",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "negotiateLanguages",
    "memberof": "src/negotiate_languages.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/negotiate_languages.js~negotiateLanguages",
    "access": "public",
    "export": true,
    "importPath": "@fluent/langneg/src/negotiate_languages.js",
    "importStyle": "negotiateLanguages",
    "description": "Negotiates the languages between the list of requested locales against\na list of available locales.\n\nIt accepts three arguments:\n\n  requestedLocales:\n    an Array of strings with BCP47 locale IDs sorted\n    according to user preferences.\n\n  availableLocales:\n    an Array of strings with BCP47 locale IDs of locale for which\n    resources are available. Unsorted.\n\n  options:\n    An object with the following, optional keys:\n\n      strategy: 'filtering' (default) | 'matching' | 'lookup'\n\n      defaultLocale:\n        a string with BCP47 locale ID to be used\n        as a last resort locale.\n\n\nIt returns an Array of strings with BCP47 locale IDs sorted according to the\nuser preferences.\n\nThe exact list will be selected differently depending on the strategy:\n\n  'filtering': (default)\n    In the filtering strategy, the algorithm will attempt to match\n    as many keys in the available locales in order of the requested locales.\n\n  'matching':\n    In the matching strategy, the algorithm will attempt to find the\n    best possible match for each element of the requestedLocales list.\n\n  'lookup':\n    In the lookup strategy, the algorithm will attempt to find a single\n    best available locale based on the requested locales list.\n\n    This strategy requires defaultLocale option to be set.",
    "lineNumber": 66,
    "params": [
      {
        "name": "requestedLocales",
        "types": [
          "*"
        ]
      },
      {
        "name": "availableLocales",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "file",
    "name": "src/subtags.js",
    "content": "import Locale from \"./locale\";\n\n/**\n * Below is a manually a list of likely subtags corresponding to Unicode\n * CLDR likelySubtags list.\n * This list is curated by the maintainers of Project Fluent and is\n * intended to be used in place of the full likelySubtags list in use cases\n * where full list cannot be (for example, due to the size).\n *\n * This version of the list is based on CLDR 30.0.3.\n */\nconst likelySubtagsMin = {\n  \"ar\": \"ar-arab-eg\",\n  \"az-arab\": \"az-arab-ir\",\n  \"az-ir\": \"az-arab-ir\",\n  \"be\": \"be-cyrl-by\",\n  \"da\": \"da-latn-dk\",\n  \"el\": \"el-grek-gr\",\n  \"en\": \"en-latn-us\",\n  \"fa\": \"fa-arab-ir\",\n  \"ja\": \"ja-jpan-jp\",\n  \"ko\": \"ko-kore-kr\",\n  \"pt\": \"pt-latn-br\",\n  \"sr\": \"sr-cyrl-rs\",\n  \"sr-ru\": \"sr-latn-ru\",\n  \"sv\": \"sv-latn-se\",\n  \"ta\": \"ta-taml-in\",\n  \"uk\": \"uk-cyrl-ua\",\n  \"zh\": \"zh-hans-cn\",\n  \"zh-hant\": \"zh-hant-tw\",\n  \"zh-hk\": \"zh-hant-hk\",\n  \"zh-gb\": \"zh-hant-gb\",\n  \"zh-us\": \"zh-hant-us\",\n};\n\nconst regionMatchingLangs = [\n  \"az\",\n  \"bg\",\n  \"cs\",\n  \"de\",\n  \"es\",\n  \"fi\",\n  \"fr\",\n  \"hu\",\n  \"it\",\n  \"lt\",\n  \"lv\",\n  \"nl\",\n  \"pl\",\n  \"ro\",\n  \"ru\",\n];\n\nexport function getLikelySubtagsMin(loc) {\n  if (likelySubtagsMin.hasOwnProperty(loc)) {\n    return new Locale(likelySubtagsMin[loc]);\n  }\n  const locale = new Locale(loc);\n  if (regionMatchingLangs.includes(locale.language)) {\n    locale.region = locale.language.toUpperCase();\n    return locale;\n  }\n  return null;\n}\n",
    "static": true,
    "longname": "/c/Users/Stas/Mozilla/fluent/fluent.js/fluent-langneg/src/subtags.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "likelySubtagsMin",
    "memberof": "src/subtags.js",
    "static": true,
    "longname": "src/subtags.js~likelySubtagsMin",
    "access": "public",
    "export": false,
    "importPath": "@fluent/langneg/src/subtags.js",
    "importStyle": null,
    "description": "Below is a manually a list of likely subtags corresponding to Unicode\nCLDR likelySubtags list.\nThis list is curated by the maintainers of Project Fluent and is\nintended to be used in place of the full likelySubtags list in use cases\nwhere full list cannot be (for example, due to the size).\n\nThis version of the list is based on CLDR 30.0.3.",
    "lineNumber": 12,
    "type": {
      "types": [
        "{\"ar\": string, \"az-arab\": string, \"az-ir\": string, \"be\": string, \"da\": string, \"el\": string, \"en\": string, \"fa\": string, \"ja\": string, \"ko\": string, \"pt\": string, \"sr\": string, \"sr-ru\": string, \"sv\": string, \"ta\": string, \"uk\": string, \"zh\": string, \"zh-hant\": string, \"zh-hk\": string, \"zh-gb\": string, \"zh-us\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 81,
    "kind": "variable",
    "name": "regionMatchingLangs",
    "memberof": "src/subtags.js",
    "static": true,
    "longname": "src/subtags.js~regionMatchingLangs",
    "access": "public",
    "export": false,
    "importPath": "@fluent/langneg/src/subtags.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "getLikelySubtagsMin",
    "memberof": "src/subtags.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/subtags.js~getLikelySubtagsMin",
    "access": "public",
    "export": true,
    "importPath": "@fluent/langneg/src/subtags.js",
    "importStyle": "{getLikelySubtagsMin}",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "params": [
      {
        "name": "loc",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "# @fluent/langneg\n\n`@fluent/langneg` is an API for negotiating languages. It's part of Project\nFluent, a localization framework designed to unleash the expressive power of\nthe natural language.\n\nIt's main function is to provide functionality around the [Intl.Locale][] API\nwith a focus on language negotiation, matching and selection.\n\n\n## Installation\n\n`@fluent/langneg` can be used both on the client-side and the server-side.\nYou can install it from the npm registry or use it as a standalone script.\n\n    npm install @fluent/langneg\n\n\n## How to use\n\n```javascript\nimport { negotiateLanguages } from '@fluent/langneg';\n\nconst supportedLocales = negotiateLanguages(\n  navigator.languages,       // requested locales\n  ['de', 'en-US', 'pl'],     // available locales\n  { defaultLocale: 'en-US' }\n);\n```\n\nThe API reference is available at\nhttps://projectfluent.org/fluent.js/langneg.\n\n## Strategies\n\nThe API supports three negotiation strategies:\n\n### filtering (default)\n\nIn this strategy the algorithm will look for the best matching available\nlocale for each requested locale.\n\nExample:\n\nrequested: ['de-DE', 'fr-FR']\navailable: ['it', 'de', 'en-US', 'fr-CA', 'de-DE', 'fr', 'de-AU']\n\nsupported: ['de-DE', 'fr']\n\n### matching\n\nIn this strategy the algorithm will try to match as many available locales\nas possible for each of the requested locale.\n\nExample:\n\nrequested: ['de-DE', 'fr-FR']\navailable: ['it', 'de', 'en-US', 'fr-CA', 'de-DE', 'fr', 'de-AU']\n\nsupported: ['de-DE', 'de', 'fr', 'fr-CA']\n\n### lookup\n\nIn this strategy the algorithm will try to find the single best locale\nfor the requested locale list among the available locales.\n\nExample:\n\nrequested: ['de-DE', 'fr-FR']\navailable: ['it', 'de', 'en-US', 'fr-CA', 'de-DE', 'fr', 'de-AU']\n\nsupported: ['de-DE']\n\n### API use:\n\n```javascript\nlet supported = negotiateLanguages(requested, available, {\n  strategy: 'matching',\n});\n```\n\n## Likely subtags\n\nFluent Language Negotiation module carries its own minimal list of likely\nsubtags data, which is useful in finding most likely available locales\nin case the requested locale is too generic.\n\nAn example of that scenario is when the user requests `en` locale, and\nthe application supports `en-GB` and `en-US`.\n\n## Learn more\n\nFind out more about Project Fluent at [projectfluent.org][], including\ndocumentation of the Fluent file format ([FTL][]), links to other packages and\nimplementations, and information about how to get involved.\n\n\n[projectfluent.org]: https://projectfluent.org\n[FTL]: https://projectfluent.org/fluent/guide/\n[Intl.Locale]: https://github.com/tc39/proposal-intl-locale\n",
    "longname": "/c/Users/Stas/Mozilla/fluent/fluent.js/fluent-langneg/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@fluent/langneg\",\n  \"description\": \"Language Negotiation API for Fluent\",\n  \"version\": \"0.3.0\",\n  \"homepage\": \"https://projectfluent.org\",\n  \"author\": \"Mozilla <l10n-drivers@mozilla.org>\",\n  \"license\": \"Apache-2.0\",\n  \"contributors\": [\n    {\n      \"name\": \"Zibi Braniecki\",\n      \"email\": \"zbraniecki@mozilla.com\"\n    },\n    {\n      \"name\": \"Staś Małolepszy\",\n      \"email\": \"stas@mozilla.com\"\n    }\n  ],\n  \"directories\": {\n    \"lib\": \"./src\"\n  },\n  \"main\": \"./index.js\",\n  \"module\": \"./src/index.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/projectfluent/fluent.js.git\"\n  },\n  \"keywords\": [\n    \"localization\",\n    \"l10n\",\n    \"internationalization\",\n    \"i18n\",\n    \"locale\",\n    \"language\",\n    \"language-negotiation\"\n  ],\n  \"engines\": {\n    \"node\": \">=10.0.0\"\n  }\n}\n",
    "longname": "/c/Users/Stas/Mozilla/fluent/fluent.js/fluent-langneg/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]