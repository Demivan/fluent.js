[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/builtins.js",
    "content": "/**\n * @overview\n *\n * The FTL resolver ships with a number of functions built-in.\n *\n * Each function take two arguments:\n *   - args - an array of positional args\n *   - opts - an object of key-value args\n *\n * Arguments to functions are guaranteed to already be instances of\n * `FluentType`.  Functions must return `FluentType` objects as well.\n */\n\nimport { FluentNone, FluentNumber, FluentDateTime } from \"./types.js\";\n\nfunction merge(argopts, opts) {\n  return Object.assign({}, argopts, values(opts));\n}\n\nfunction values(opts) {\n  const unwrapped = {};\n  for (const [name, opt] of Object.entries(opts)) {\n    unwrapped[name] = opt.valueOf();\n  }\n  return unwrapped;\n}\n\nexport\nfunction NUMBER([arg], opts) {\n  if (arg instanceof FluentNone) {\n    return new FluentNone(`NUMBER(${arg.valueOf()})`);\n  }\n\n  let value = Number(arg.valueOf());\n  if (Number.isNaN(value)) {\n    throw new TypeError(\"Invalid argument to NUMBER\");\n  }\n\n  return new FluentNumber(value, merge(arg.opts, opts));\n}\n\nexport\nfunction DATETIME([arg], opts) {\n  if (arg instanceof FluentNone) {\n    return new FluentNone(`DATETIME(${arg.valueOf()})`);\n  }\n\n  let value = Number(arg.valueOf());\n  if (Number.isNaN(value)) {\n    throw new TypeError(\"Invalid argument to DATETIME\");\n  }\n\n  return new FluentDateTime(value, merge(arg.opts, opts));\n}\n",
    "static": true,
    "longname": "/c/Users/stas/Mozilla/fluent/fluent.js/fluent-bundle/src/builtins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "merge",
    "memberof": "src/builtins.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/builtins.js~merge",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/builtins.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "argopts",
        "types": [
          "*"
        ]
      },
      {
        "name": "opts",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "values",
    "memberof": "src/builtins.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/builtins.js~values",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/builtins.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "opts",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "NUMBER",
    "memberof": "src/builtins.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/builtins.js~NUMBER",
    "access": "public",
    "export": true,
    "importPath": "@fluent/bundle/src/builtins.js",
    "importStyle": "{NUMBER}",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "arrayPattern",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null"
        ],
        "defaultValue": "[null]"
      },
      {
        "name": "opts",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "DATETIME",
    "memberof": "src/builtins.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/builtins.js~DATETIME",
    "access": "public",
    "export": true,
    "importPath": "@fluent/bundle/src/builtins.js",
    "importStyle": "{DATETIME}",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [
      {
        "name": "arrayPattern",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null"
        ],
        "defaultValue": "[null]"
      },
      {
        "name": "opts",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "src/bundle.js",
    "content": "import {FluentNone} from \"./types.js\";\nimport {resolveComplexPattern} from \"./resolver.js\";\nimport Scope from \"./scope.js\";\n\n/**\n * Message bundles are single-language stores of translation resources. They are\n * responsible for formatting message values and attributes to strings.\n */\nexport default class FluentBundle {\n  /**\n   * Create an instance of `FluentBundle`.\n   *\n   * The `locales` argument is used to instantiate `Intl` formatters used by\n   * translations. The `options` object can be used to configure the bundle.\n   *\n   * Examples:\n   *\n   *     let bundle = new FluentBundle([\"en-US\", \"en\"]);\n   *\n   *     let bundle = new FluentBundle(locales, {useIsolating: false});\n   *\n   *     let bundle = new FluentBundle(locales, {\n   *       useIsolating: true,\n   *       functions: {\n   *         NODE_ENV: () => process.env.NODE_ENV\n   *       }\n   *     });\n   *\n   * Available options:\n   *\n   *   - `functions` - an object of additional functions available to\n   *     translations as builtins.\n   *\n   *   - `useIsolating` - boolean specifying whether to use Unicode isolation\n   *     marks (FSI, PDI) for bidi interpolations. Default: `true`.\n   *\n   *   - `transform` - a function used to transform string parts of patterns.\n   *\n   * @param   {(string|Array.<string>)} locales - The locales of the bundle\n   * @param   {Object} [options]\n   * @returns {FluentBundle}\n   */\n  constructor(locales, {\n    functions = {},\n    useIsolating = true,\n    transform = v => v,\n  } = {}) {\n    this.locales = Array.isArray(locales) ? locales : [locales];\n\n    this._terms = new Map();\n    this._messages = new Map();\n    this._functions = functions;\n    this._useIsolating = useIsolating;\n    this._transform = transform;\n    this._intls = new WeakMap();\n  }\n\n  /**\n   * Check if a message is present in the bundle.\n   *\n   * @param {string} id - The identifier of the message to check.\n   * @returns {bool}\n   */\n  hasMessage(id) {\n    return this._messages.has(id);\n  }\n\n  /**\n   * Return a raw unformatted message object from the bundle.\n   *\n   * Raw messages are `{value, attributes}` shapes containing translation units\n   * called `Patterns`. `Patterns` are implementation-specific; they should be\n   * treated as black boxes and formatted with `FluentBundle.formatPattern`.\n   *\n   *     interface RawMessage {\n   *         value: Pattern | null;\n   *         attributes: Record<string, Pattern>;\n   *     }\n   *\n   * @param {string} id - The identifier of the message to check.\n   * @returns {{value: ?Pattern, attributes: Object.<string, Pattern>}}\n   */\n  getMessage(id) {\n    return this._messages.get(id);\n  }\n\n  /**\n   * Add a translation resource to the bundle.\n   *\n   * The translation resource must be an instance of `FluentResource`.\n   *\n   *     let res = new FluentResource(\"foo = Foo\");\n   *     bundle.addResource(res);\n   *     bundle.getMessage(\"foo\");\n   *     // → {value: .., attributes: {..}}\n   *\n   * Available options:\n   *\n   *   - `allowOverrides` - boolean specifying whether it's allowed to override\n   *     an existing message or term with a new value. Default: `false`.\n   *\n   * @param   {FluentResource} res - FluentResource object.\n   * @param   {Object} [options]\n   * @returns {Array.<FluentError>}\n   */\n  addResource(res, {\n    allowOverrides = false,\n  } = {}) {\n    const errors = [];\n\n    for (let i = 0; i < res.body.length; i++) {\n      let entry = res.body[i];\n      if (entry.id.startsWith(\"-\")) {\n        // Identifiers starting with a dash (-) define terms. Terms are private\n        // and cannot be retrieved from FluentBundle.\n        if (allowOverrides === false && this._terms.has(entry.id)) {\n          errors.push(`Attempt to override an existing term: \"${entry.id}\"`);\n          continue;\n        }\n        this._terms.set(entry.id, entry);\n      } else {\n        if (allowOverrides === false && this._messages.has(entry.id)) {\n          errors.push(`Attempt to override an existing message: \"${entry.id}\"`);\n          continue;\n        }\n        this._messages.set(entry.id, entry);\n      }\n    }\n\n    return errors;\n  }\n\n  /**\n   * Format a `Pattern` to a string.\n   *\n   * Format a raw `Pattern` into a string. `args` will be used to resolve\n   * references to variables passed as arguments to the translation.\n   *\n   * In case of errors `formatPattern` will try to salvage as much of the\n   * translation as possible and will still return a string. For performance\n   * reasons, the encountered errors are not returned but instead are appended\n   * to the `errors` array passed as the third argument.\n   *\n   *     let errors = [];\n   *     bundle.addResource(\n   *         new FluentResource(\"hello = Hello, {$name}!\"));\n   *\n   *     let hello = bundle.getMessage(\"hello\");\n   *     if (hello.value) {\n   *         bundle.formatPattern(hello.value, {name: \"Jane\"}, errors);\n   *         // Returns \"Hello, Jane!\" and `errors` is empty.\n   *\n   *         bundle.formatPattern(hello.value, undefined, errors);\n   *         // Returns \"Hello, {$name}!\" and `errors` is now:\n   *         // [<ReferenceError: Unknown variable: name>]\n   *     }\n   *\n   * If `errors` is omitted, the first encountered error will be thrown.\n   *\n   * @param   {Pattern} pattern\n   * @param   {?Object} args\n   * @param   {?Array.<Error>} errors\n   * @returns {string}\n   */\n  formatPattern(pattern, args, errors) {\n    // Resolve a simple pattern without creating a scope. No error handling is\n    // required; by definition simple patterns don't have placeables.\n    if (typeof pattern === \"string\") {\n      return this._transform(pattern);\n    }\n\n    // Resolve a complex pattern.\n    let scope = new Scope(this, errors, args);\n    try {\n      let value = resolveComplexPattern(scope, pattern);\n      return value.toString(scope);\n    } catch (err) {\n      if (scope.errors) {\n        scope.errors.push(err);\n        return new FluentNone().toString(scope);\n      }\n      throw err;\n    }\n  }\n}\n",
    "static": true,
    "longname": "/c/Users/stas/Mozilla/fluent/fluent.js/fluent-bundle/src/bundle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "class",
    "name": "FluentBundle",
    "memberof": "src/bundle.js",
    "static": true,
    "longname": "src/bundle.js~FluentBundle",
    "access": "public",
    "export": true,
    "importPath": "@fluent/bundle/src/bundle.js",
    "importStyle": "FluentBundle",
    "description": "Message bundles are single-language stores of translation resources. They are\nresponsible for formatting message values and attributes to strings.",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 55,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/bundle.js~FluentBundle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/bundle.js~FluentBundle#constructor",
    "access": "public",
    "description": "Create an instance of `FluentBundle`.\n\nThe `locales` argument is used to instantiate `Intl` formatters used by\ntranslations. The `options` object can be used to configure the bundle.\n\nExamples:\n\n    let bundle = new FluentBundle([\"en-US\", \"en\"]);\n\n    let bundle = new FluentBundle(locales, {useIsolating: false});\n\n    let bundle = new FluentBundle(locales, {\n      useIsolating: true,\n      functions: {\n        NODE_ENV: () => process.env.NODE_ENV\n      }\n    });\n\nAvailable options:\n\n  - `functions` - an object of additional functions available to\n    translations as builtins.\n\n  - `useIsolating` - boolean specifying whether to use Unicode isolation\n    marks (FSI, PDI) for bidi interpolations. Default: `true`.\n\n  - `transform` - a function used to transform string parts of patterns.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{FluentBundle}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "locales",
        "description": "The locales of the bundle"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FluentBundle"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "locales",
    "memberof": "src/bundle.js~FluentBundle",
    "static": false,
    "longname": "src/bundle.js~FluentBundle#locales",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "_terms",
    "memberof": "src/bundle.js~FluentBundle",
    "static": false,
    "longname": "src/bundle.js~FluentBundle#_terms",
    "access": "private",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "_messages",
    "memberof": "src/bundle.js~FluentBundle",
    "static": false,
    "longname": "src/bundle.js~FluentBundle#_messages",
    "access": "private",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "_functions",
    "memberof": "src/bundle.js~FluentBundle",
    "static": false,
    "longname": "src/bundle.js~FluentBundle#_functions",
    "access": "private",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "_useIsolating",
    "memberof": "src/bundle.js~FluentBundle",
    "static": false,
    "longname": "src/bundle.js~FluentBundle#_useIsolating",
    "access": "private",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "_transform",
    "memberof": "src/bundle.js~FluentBundle",
    "static": false,
    "longname": "src/bundle.js~FluentBundle#_transform",
    "access": "private",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "_intls",
    "memberof": "src/bundle.js~FluentBundle",
    "static": false,
    "longname": "src/bundle.js~FluentBundle#_intls",
    "access": "private",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "hasMessage",
    "memberof": "src/bundle.js~FluentBundle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/bundle.js~FluentBundle#hasMessage",
    "access": "public",
    "description": "Check if a message is present in the bundle.",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{bool}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The identifier of the message to check."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "bool"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "getMessage",
    "memberof": "src/bundle.js~FluentBundle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/bundle.js~FluentBundle#getMessage",
    "access": "public",
    "description": "Return a raw unformatted message object from the bundle.\n\nRaw messages are `{value, attributes}` shapes containing translation units\ncalled `Patterns`. `Patterns` are implementation-specific; they should be\ntreated as black boxes and formatted with `FluentBundle.formatPattern`.\n\n    interface RawMessage {\n        value: Pattern | null;\n        attributes: Record<string, Pattern>;\n    }",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{value: ?Pattern, attributes: Object.<string, Pattern>}}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The identifier of the message to check."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{value: ?Pattern, attributes: Object.<string, Pattern>}"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "addResource",
    "memberof": "src/bundle.js~FluentBundle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/bundle.js~FluentBundle#addResource",
    "access": "public",
    "description": "Add a translation resource to the bundle.\n\nThe translation resource must be an instance of `FluentResource`.\n\n    let res = new FluentResource(\"foo = Foo\");\n    bundle.addResource(res);\n    bundle.getMessage(\"foo\");\n    // → {value: .., attributes: {..}}\n\nAvailable options:\n\n  - `allowOverrides` - boolean specifying whether it's allowed to override\n    an existing message or term with a new value. Default: `false`.",
    "lineNumber": 106,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array.<FluentError>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "FluentResource"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "FluentResource object."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<FluentError>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "formatPattern",
    "memberof": "src/bundle.js~FluentBundle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/bundle.js~FluentBundle#formatPattern",
    "access": "public",
    "description": "Format a `Pattern` to a string.\n\nFormat a raw `Pattern` into a string. `args` will be used to resolve\nreferences to variables passed as arguments to the translation.\n\nIn case of errors `formatPattern` will try to salvage as much of the\ntranslation as possible and will still return a string. For performance\nreasons, the encountered errors are not returned but instead are appended\nto the `errors` array passed as the third argument.\n\n    let errors = [];\n    bundle.addResource(\n        new FluentResource(\"hello = Hello, {$name}!\"));\n\n    let hello = bundle.getMessage(\"hello\");\n    if (hello.value) {\n        bundle.formatPattern(hello.value, {name: \"Jane\"}, errors);\n        // Returns \"Hello, Jane!\" and `errors` is empty.\n\n        bundle.formatPattern(hello.value, undefined, errors);\n        // Returns \"Hello, {$name}!\" and `errors` is now:\n        // [<ReferenceError: Unknown variable: name>]\n    }\n\nIf `errors` is omitted, the first encountered error will be thrown.",
    "lineNumber": 165,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Pattern"
        ],
        "spread": false,
        "optional": false,
        "name": "pattern",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Array.<Error>"
        ],
        "spread": false,
        "optional": false,
        "name": "errors",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 67,
    "kind": "file",
    "name": "src/error.js",
    "content": "export default class FluentError extends Error {}\n",
    "static": true,
    "longname": "/c/Users/stas/Mozilla/fluent/fluent.js/fluent-bundle/src/error.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 68,
    "kind": "class",
    "name": "FluentError",
    "memberof": "src/error.js",
    "static": true,
    "longname": "src/error.js~FluentError",
    "access": "public",
    "export": true,
    "importPath": "@fluent/bundle/src/error.js",
    "importStyle": "FluentError",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 69,
    "kind": "file",
    "name": "src/index.js",
    "content": "/**\n * @module fluent\n * @overview\n *\n * `fluent` is a JavaScript implementation of Project Fluent, a localization\n * framework designed to unleash the expressive power of the natural language.\n *\n */\n\nexport { default as FluentBundle } from \"./bundle.js\";\nexport { default as FluentResource } from \"./resource.js\";\nexport { default as FluentError } from \"./error.js\";\nexport { FluentType, FluentNumber, FluentDateTime } from \"./types.js\";\n",
    "static": true,
    "longname": "/c/Users/stas/Mozilla/fluent/fluent.js/fluent-bundle/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 70,
    "kind": "file",
    "name": "src/resolver.js",
    "content": "/* global Intl */\n\n/**\n * @overview\n *\n * The role of the Fluent resolver is to format a `Pattern` to an instance of\n * `FluentType`. For performance reasons, primitive strings are considered such\n * instances, too.\n *\n * Translations can contain references to other messages or variables,\n * conditional logic in form of select expressions, traits which describe their\n * grammatical features, and can use Fluent builtins which make use of the\n * `Intl` formatters to format numbers and dates into the bundle's languages.\n * See the documentation of the Fluent syntax for more information.\n *\n * In case of errors the resolver will try to salvage as much of the\n * translation as possible. In rare situations where the resolver didn't know\n * how to recover from an error it will return an instance of `FluentNone`.\n *\n * All expressions resolve to an instance of `FluentType`. The caller should\n * use the `toString` method to convert the instance to a native value.\n *\n * Functions in this file pass around an instance of the `Scope` class, which\n * stores the data required for successful resolution and error recovery.\n */\n\n\nimport { FluentType, FluentNone, FluentNumber, FluentDateTime }\n  from \"./types.js\";\nimport * as builtins from \"./builtins.js\";\n\n// The maximum number of placeables which can be expanded in a single call to\n// `formatPattern`. The limit protects against the Billion Laughs and Quadratic\n// Blowup attacks. See https://msdn.microsoft.com/en-us/magazine/ee335713.aspx.\nconst MAX_PLACEABLES = 100;\n\n// Unicode bidi isolation characters.\nconst FSI = \"\\u2068\";\nconst PDI = \"\\u2069\";\n\n\n// Helper: match a variant key to the given selector.\nfunction match(scope, selector, key) {\n  if (key === selector) {\n    // Both are strings.\n    return true;\n  }\n\n  // XXX Consider comparing options too, e.g. minimumFractionDigits.\n  if (key instanceof FluentNumber\n    && selector instanceof FluentNumber\n    && key.value === selector.value) {\n    return true;\n  }\n\n  if (selector instanceof FluentNumber && typeof key === \"string\") {\n    let category = scope\n      .memoizeIntlObject(Intl.PluralRules, selector.opts)\n      .select(selector.value);\n    if (key === category) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Helper: resolve the default variant from a list of variants.\nfunction getDefault(scope, variants, star) {\n  if (variants[star]) {\n    return resolvePattern(scope, variants[star].value);\n  }\n\n  scope.reportError(new RangeError(\"No default\"));\n  return new FluentNone();\n}\n\n// Helper: resolve arguments to a call expression.\nfunction getArguments(scope, args) {\n  const positional = [];\n  const named = Object.create(null);\n\n  for (const arg of args) {\n    if (arg.type === \"narg\") {\n      named[arg.name] = resolveExpression(scope, arg.value);\n    } else {\n      positional.push(resolveExpression(scope, arg));\n    }\n  }\n\n  return {positional, named};\n}\n\n// Resolve an expression to a Fluent type.\nfunction resolveExpression(scope, expr) {\n  switch (expr.type) {\n    case \"str\":\n      return expr.value;\n    case \"num\":\n      return new FluentNumber(expr.value, {\n        minimumFractionDigits: expr.precision,\n      });\n    case \"var\":\n      return VariableReference(scope, expr);\n    case \"mesg\":\n      return MessageReference(scope, expr);\n    case \"term\":\n      return TermReference(scope, expr);\n    case \"func\":\n      return FunctionReference(scope, expr);\n    case \"select\":\n      return SelectExpression(scope, expr);\n    default:\n      return new FluentNone();\n  }\n}\n\n// Resolve a reference to a variable.\nfunction VariableReference(scope, {name}) {\n  let arg;\n  if (scope.params) {\n    // We're inside a TermReference. It's OK to reference undefined parameters.\n    if (Object.prototype.hasOwnProperty.call(scope.params, name)) {\n      arg = scope.params[name];\n    } else {\n      return new FluentNone(`$${name}`);\n    }\n  } else if (\n    scope.args\n    && Object.prototype.hasOwnProperty.call(scope.args, name)\n  ) {\n    // We're in the top-level Pattern or inside a MessageReference. Missing\n    // variables references produce ReferenceErrors.\n    arg = scope.args[name];\n  } else {\n    scope.reportError(new ReferenceError(`Unknown variable: $${name}`));\n    return new FluentNone(`$${name}`);\n  }\n\n  // Return early if the argument already is an instance of FluentType.\n  if (arg instanceof FluentType) {\n    return arg;\n  }\n\n  // Convert the argument to a Fluent type.\n  switch (typeof arg) {\n    case \"string\":\n      return arg;\n    case \"number\":\n      return new FluentNumber(arg);\n    case \"object\":\n      if (arg instanceof Date) {\n        return new FluentDateTime(arg.getTime());\n      }\n    default:\n      scope.reportError(\n        new TypeError(`Variable type not supported: $${name}, ${typeof arg}`)\n      );\n      return new FluentNone(`$${name}`);\n  }\n}\n\n// Resolve a reference to another message.\nfunction MessageReference(scope, {name, attr}) {\n  const message = scope.bundle._messages.get(name);\n  if (!message) {\n    scope.reportError(new ReferenceError(`Unknown message: ${name}`));\n    return new FluentNone(name);\n  }\n\n  if (attr) {\n    const attribute = message.attributes[attr];\n    if (attribute) {\n      return resolvePattern(scope, attribute);\n    }\n    scope.reportError(new ReferenceError(`Unknown attribute: ${attr}`));\n    return new FluentNone(`${name}.${attr}`);\n  }\n\n  if (message.value) {\n    return resolvePattern(scope, message.value);\n  }\n\n  scope.reportError(new ReferenceError(`No value: ${name}`));\n  return new FluentNone(name);\n}\n\n// Resolve a call to a Term with key-value arguments.\nfunction TermReference(scope, {name, attr, args}) {\n  const id = `-${name}`;\n  const term = scope.bundle._terms.get(id);\n  if (!term) {\n    scope.reportError(new ReferenceError(`Unknown term: ${id}`));\n    return new FluentNone(id);\n  }\n\n  if (attr) {\n    const attribute = term.attributes[attr];\n    if (attribute) {\n      // Every TermReference has its own variables.\n      scope.params = getArguments(scope, args).named;\n      const resolved = resolvePattern(scope, attribute);\n      scope.params = null;\n      return resolved;\n    }\n    scope.reportError(new ReferenceError(`Unknown attribute: ${attr}`));\n    return new FluentNone(`${id}.${attr}`);\n  }\n\n  scope.params = getArguments(scope, args).named;\n  const resolved = resolvePattern(scope, term.value);\n  scope.params = null;\n  return resolved;\n}\n\n// Resolve a call to a Function with positional and key-value arguments.\nfunction FunctionReference(scope, {name, args}) {\n  // Some functions are built-in. Others may be provided by the runtime via\n  // the `FluentBundle` constructor.\n  const func = scope.bundle._functions[name] || builtins[name];\n  if (!func) {\n    scope.reportError(new ReferenceError(`Unknown function: ${name}()`));\n    return new FluentNone(`${name}()`);\n  }\n\n  if (typeof func !== \"function\") {\n    scope.reportError(new TypeError(`Function ${name}() is not callable`));\n    return new FluentNone(`${name}()`);\n  }\n\n  try {\n    let resolved = getArguments(scope, args);\n    return func(resolved.positional, resolved.named);\n  } catch (err) {\n    scope.reportError(err);\n    return new FluentNone(`${name}()`);\n  }\n}\n\n// Resolve a select expression to the member object.\nfunction SelectExpression(scope, {selector, variants, star}) {\n  let sel = resolveExpression(scope, selector);\n  if (sel instanceof FluentNone) {\n    return getDefault(scope, variants, star);\n  }\n\n  // Match the selector against keys of each variant, in order.\n  for (const variant of variants) {\n    const key = resolveExpression(scope, variant.key);\n    if (match(scope, sel, key)) {\n      return resolvePattern(scope, variant.value);\n    }\n  }\n\n  return getDefault(scope, variants, star);\n}\n\n// Resolve a pattern (a complex string with placeables).\nexport function resolveComplexPattern(scope, ptn) {\n  if (scope.dirty.has(ptn)) {\n    scope.reportError(new RangeError(\"Cyclic reference\"));\n    return new FluentNone();\n  }\n\n  // Tag the pattern as dirty for the purpose of the current resolution.\n  scope.dirty.add(ptn);\n  const result = [];\n\n  // Wrap interpolations with Directional Isolate Formatting characters\n  // only when the pattern has more than one element.\n  const useIsolating = scope.bundle._useIsolating && ptn.length > 1;\n\n  for (const elem of ptn) {\n    if (typeof elem === \"string\") {\n      result.push(scope.bundle._transform(elem));\n      continue;\n    }\n\n    scope.placeables++;\n    if (scope.placeables > MAX_PLACEABLES) {\n      scope.dirty.delete(ptn);\n      // This is a fatal error which causes the resolver to instantly bail out\n      // on this pattern. The length check protects against excessive memory\n      // usage, and throwing protects against eating up the CPU when long\n      // placeables are deeply nested.\n      throw new RangeError(\n        `Too many placeables expanded: ${scope.placeables}, ` +\n        `max allowed is ${MAX_PLACEABLES}`\n      );\n    }\n\n    if (useIsolating) {\n      result.push(FSI);\n    }\n\n    result.push(resolveExpression(scope, elem).toString(scope));\n\n    if (useIsolating) {\n      result.push(PDI);\n    }\n  }\n\n  scope.dirty.delete(ptn);\n  return result.join(\"\");\n}\n\n// Resolve a simple or a complex Pattern to a FluentString (which is really the\n// string primitive).\nfunction resolvePattern(scope, node) {\n  // Resolve a simple pattern.\n  if (typeof node === \"string\") {\n    return scope.bundle._transform(node);\n  }\n\n  return resolveComplexPattern(scope, node);\n}\n",
    "static": true,
    "longname": "/c/Users/stas/Mozilla/fluent/fluent.js/fluent-bundle/src/resolver.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 71,
    "kind": "variable",
    "name": "MAX_PLACEABLES",
    "memberof": "src/resolver.js",
    "static": true,
    "longname": "src/resolver.js~MAX_PLACEABLES",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resolver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 72,
    "kind": "variable",
    "name": "FSI",
    "memberof": "src/resolver.js",
    "static": true,
    "longname": "src/resolver.js~FSI",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resolver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "name": "PDI",
    "memberof": "src/resolver.js",
    "static": true,
    "longname": "src/resolver.js~PDI",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resolver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 74,
    "kind": "function",
    "name": "match",
    "memberof": "src/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/resolver.js~match",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resolver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [
      {
        "name": "scope",
        "types": [
          "*"
        ]
      },
      {
        "name": "selector",
        "types": [
          "*"
        ]
      },
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 75,
    "kind": "function",
    "name": "getDefault",
    "memberof": "src/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/resolver.js~getDefault",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resolver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "params": [
      {
        "name": "scope",
        "types": [
          "*"
        ]
      },
      {
        "name": "variants",
        "types": [
          "*"
        ]
      },
      {
        "name": "star",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 76,
    "kind": "function",
    "name": "getArguments",
    "memberof": "src/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/resolver.js~getArguments",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resolver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "params": [
      {
        "name": "scope",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"positional\": *, \"named\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 77,
    "kind": "function",
    "name": "resolveExpression",
    "memberof": "src/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/resolver.js~resolveExpression",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resolver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "params": [
      {
        "name": "scope",
        "types": [
          "*"
        ]
      },
      {
        "name": "expr",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "VariableReference",
    "memberof": "src/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/resolver.js~VariableReference",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resolver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 119,
    "undocument": true,
    "params": [
      {
        "name": "scope",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"name\": *}"
        ],
        "defaultRaw": {
          "name": null
        },
        "defaultValue": "{\"name\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "MessageReference",
    "memberof": "src/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/resolver.js~MessageReference",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resolver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 164,
    "undocument": true,
    "params": [
      {
        "name": "scope",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"name\": *, \"attr\": *}"
        ],
        "defaultRaw": {
          "name": null,
          "attr": null
        },
        "defaultValue": "{\"name\":null,\"attr\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 80,
    "kind": "function",
    "name": "TermReference",
    "memberof": "src/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/resolver.js~TermReference",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resolver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "params": [
      {
        "name": "scope",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"name\": *, \"attr\": *, \"args\": *}"
        ],
        "defaultRaw": {
          "name": null,
          "attr": null,
          "args": null
        },
        "defaultValue": "{\"name\":null,\"attr\":null,\"args\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "FunctionReference",
    "memberof": "src/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/resolver.js~FunctionReference",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resolver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 217,
    "undocument": true,
    "params": [
      {
        "name": "scope",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"name\": *, \"args\": *}"
        ],
        "defaultRaw": {
          "name": null,
          "args": null
        },
        "defaultValue": "{\"name\":null,\"args\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "SelectExpression",
    "memberof": "src/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/resolver.js~SelectExpression",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resolver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 241,
    "undocument": true,
    "params": [
      {
        "name": "scope",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"selector\": *, \"variants\": *, \"star\": *}"
        ],
        "defaultRaw": {
          "selector": null,
          "variants": null,
          "star": null
        },
        "defaultValue": "{\"selector\":null,\"variants\":null,\"star\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 83,
    "kind": "function",
    "name": "resolveComplexPattern",
    "memberof": "src/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/resolver.js~resolveComplexPattern",
    "access": "public",
    "export": true,
    "importPath": "@fluent/bundle/src/resolver.js",
    "importStyle": "{resolveComplexPattern}",
    "description": null,
    "lineNumber": 259,
    "undocument": true,
    "params": [
      {
        "name": "scope",
        "types": [
          "*"
        ]
      },
      {
        "name": "ptn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "resolvePattern",
    "memberof": "src/resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/resolver.js~resolvePattern",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resolver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 309,
    "undocument": true,
    "params": [
      {
        "name": "scope",
        "types": [
          "*"
        ]
      },
      {
        "name": "node",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "src/resource.js",
    "content": "import FluentError from \"./error.js\";\n\n// This regex is used to iterate through the beginnings of messages and terms.\n// With the /m flag, the ^ matches at the beginning of every line.\nconst RE_MESSAGE_START = /^(-?[a-zA-Z][\\w-]*) *= */mg;\n\n// Both Attributes and Variants are parsed in while loops. These regexes are\n// used to break out of them.\nconst RE_ATTRIBUTE_START = /\\.([a-zA-Z][\\w-]*) *= */y;\nconst RE_VARIANT_START = /\\*?\\[/y;\n\nconst RE_NUMBER_LITERAL = /(-?[0-9]+(?:\\.([0-9]+))?)/y;\nconst RE_IDENTIFIER = /([a-zA-Z][\\w-]*)/y;\nconst RE_REFERENCE = /([$-])?([a-zA-Z][\\w-]*)(?:\\.([a-zA-Z][\\w-]*))?/y;\nconst RE_FUNCTION_NAME = /^[A-Z][A-Z0-9_-]*$/;\n\n// A \"run\" is a sequence of text or string literal characters which don't\n// require any special handling. For TextElements such special characters are: {\n// (starts a placeable), and line breaks which require additional logic to check\n// if the next line is indented. For StringLiterals they are: \\ (starts an\n// escape sequence), \" (ends the literal), and line breaks which are not allowed\n// in StringLiterals. Note that string runs may be empty; text runs may not.\nconst RE_TEXT_RUN = /([^{}\\n\\r]+)/y;\nconst RE_STRING_RUN = /([^\\\\\"\\n\\r]*)/y;\n\n// Escape sequences.\nconst RE_STRING_ESCAPE = /\\\\([\\\\\"])/y;\nconst RE_UNICODE_ESCAPE = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{6})/y;\n\n// Used for trimming TextElements and indents.\nconst RE_LEADING_NEWLINES = /^\\n+/;\nconst RE_TRAILING_SPACES = / +$/;\n// Used in makeIndent to strip spaces from blank lines and normalize CRLF to LF.\nconst RE_BLANK_LINES = / *\\r?\\n/g;\n// Used in makeIndent to measure the indentation.\nconst RE_INDENT = /( *)$/;\n\n// Common tokens.\nconst TOKEN_BRACE_OPEN = /{\\s*/y;\nconst TOKEN_BRACE_CLOSE = /\\s*}/y;\nconst TOKEN_BRACKET_OPEN = /\\[\\s*/y;\nconst TOKEN_BRACKET_CLOSE = /\\s*] */y;\nconst TOKEN_PAREN_OPEN = /\\s*\\(\\s*/y;\nconst TOKEN_ARROW = /\\s*->\\s*/y;\nconst TOKEN_COLON = /\\s*:\\s*/y;\n// Note the optional comma. As a deviation from the Fluent EBNF, the parser\n// doesn't enforce commas between call arguments.\nconst TOKEN_COMMA = /\\s*,?\\s*/y;\nconst TOKEN_BLANK = /\\s+/y;\n\n/**\n * Fluent Resource is a structure storing parsed localization entries.\n */\nexport default class FluentResource {\n  constructor(source) {\n    this.body = this._parse(source);\n  }\n\n  _parse(source) {\n    RE_MESSAGE_START.lastIndex = 0;\n\n    let resource = [];\n    let cursor = 0;\n\n    // Iterate over the beginnings of messages and terms to efficiently skip\n    // comments and recover from errors.\n    while (true) {\n      let next = RE_MESSAGE_START.exec(source);\n      if (next === null) {\n        break;\n      }\n\n      cursor = RE_MESSAGE_START.lastIndex;\n      try {\n        resource.push(parseMessage(next[1]));\n      } catch (err) {\n        if (err instanceof FluentError) {\n          // Don't report any Fluent syntax errors. Skip directly to the\n          // beginning of the next message or term.\n          continue;\n        }\n        throw err;\n      }\n    }\n\n    return resource;\n\n    // The parser implementation is inlined below for performance reasons,\n    // as well as for convenience of accessing `source` and `cursor`.\n\n    // The parser focuses on minimizing the number of false negatives at the\n    // expense of increasing the risk of false positives. In other words, it\n    // aims at parsing valid Fluent messages with a success rate of 100%, but it\n    // may also parse a few invalid messages which the reference parser would\n    // reject. The parser doesn't perform any validation and may produce entries\n    // which wouldn't make sense in the real world. For best results users are\n    // advised to validate translations with the fluent-syntax parser\n    // pre-runtime.\n\n    // The parser makes an extensive use of sticky regexes which can be anchored\n    // to any offset of the source string without slicing it. Errors are thrown\n    // to bail out of parsing of ill-formed messages.\n\n    function test(re) {\n      re.lastIndex = cursor;\n      return re.test(source);\n    }\n\n    // Advance the cursor by the char if it matches. May be used as a predicate\n    // (was the match found?) or, if errorClass is passed, as an assertion.\n    function consumeChar(char, errorClass) {\n      if (source[cursor] === char) {\n        cursor++;\n        return true;\n      }\n      if (errorClass) {\n        throw new errorClass(`Expected ${char}`);\n      }\n      return false;\n    }\n\n    // Advance the cursor by the token if it matches. May be used as a predicate\n    // (was the match found?) or, if errorClass is passed, as an assertion.\n    function consumeToken(re, errorClass) {\n      if (test(re)) {\n        cursor = re.lastIndex;\n        return true;\n      }\n      if (errorClass) {\n        throw new errorClass(`Expected ${re.toString()}`);\n      }\n      return false;\n    }\n\n    // Execute a regex, advance the cursor, and return all capture groups.\n    function match(re) {\n      re.lastIndex = cursor;\n      let result = re.exec(source);\n      if (result === null) {\n        throw new FluentError(`Expected ${re.toString()}`);\n      }\n      cursor = re.lastIndex;\n      return result;\n    }\n\n    // Execute a regex, advance the cursor, and return the capture group.\n    function match1(re) {\n      return match(re)[1];\n    }\n\n    function parseMessage(id) {\n      let value = parsePattern();\n      let attributes = parseAttributes();\n\n      if (value === null && Object.keys(attributes).length === 0) {\n        throw new FluentError(\"Expected message value or attributes\");\n      }\n\n      return {id, value, attributes};\n    }\n\n    function parseAttributes() {\n      let attrs = Object.create(null);\n\n      while (test(RE_ATTRIBUTE_START)) {\n        let name = match1(RE_ATTRIBUTE_START);\n        let value = parsePattern();\n        if (value === null) {\n          throw new FluentError(\"Expected attribute value\");\n        }\n        attrs[name] = value;\n      }\n\n      return attrs;\n    }\n\n    function parsePattern() {\n      // First try to parse any simple text on the same line as the id.\n      if (test(RE_TEXT_RUN)) {\n        var first = match1(RE_TEXT_RUN);\n      }\n\n      // If there's a placeable on the first line, parse a complex pattern.\n      if (source[cursor] === \"{\" || source[cursor] === \"}\") {\n        // Re-use the text parsed above, if possible.\n        return parsePatternElements(first ? [first] : [], Infinity);\n      }\n\n      // RE_TEXT_VALUE stops at newlines. Only continue parsing the pattern if\n      // what comes after the newline is indented.\n      let indent = parseIndent();\n      if (indent) {\n        if (first) {\n          // If there's text on the first line, the blank block is part of the\n          // translation content in its entirety.\n          return parsePatternElements([first, indent], indent.length);\n        }\n        // Otherwise, we're dealing with a block pattern, i.e. a pattern which\n        // starts on a new line. Discrad the leading newlines but keep the\n        // inline indent; it will be used by the dedentation logic.\n        indent.value = trim(indent.value, RE_LEADING_NEWLINES);\n        return parsePatternElements([indent], indent.length);\n      }\n\n      if (first) {\n        // It was just a simple inline text after all.\n        return trim(first, RE_TRAILING_SPACES);\n      }\n\n      return null;\n    }\n\n    // Parse a complex pattern as an array of elements.\n    function parsePatternElements(elements = [], commonIndent) {\n      while (true) {\n        if (test(RE_TEXT_RUN)) {\n          elements.push(match1(RE_TEXT_RUN));\n          continue;\n        }\n\n        if (source[cursor] === \"{\") {\n          elements.push(parsePlaceable());\n          continue;\n        }\n\n        if (source[cursor] === \"}\") {\n          throw new FluentError(\"Unbalanced closing brace\");\n        }\n\n        let indent = parseIndent();\n        if (indent) {\n          elements.push(indent);\n          commonIndent = Math.min(commonIndent, indent.length);\n          continue;\n        }\n\n        break;\n      }\n\n      let lastIndex = elements.length - 1;\n      // Trim the trailing spaces in the last element if it's a TextElement.\n      if (typeof elements[lastIndex] === \"string\") {\n        elements[lastIndex] = trim(elements[lastIndex], RE_TRAILING_SPACES);\n      }\n\n      let baked = [];\n      for (let element of elements) {\n        if (element.type === \"indent\") {\n          // Dedent indented lines by the maximum common indent.\n          element = element.value.slice(0, element.value.length - commonIndent);\n        }\n        if (element) {\n          baked.push(element);\n        }\n      }\n      return baked;\n    }\n\n    function parsePlaceable() {\n      consumeToken(TOKEN_BRACE_OPEN, FluentError);\n\n      let selector = parseInlineExpression();\n      if (consumeToken(TOKEN_BRACE_CLOSE)) {\n        return selector;\n      }\n\n      if (consumeToken(TOKEN_ARROW)) {\n        let variants = parseVariants();\n        consumeToken(TOKEN_BRACE_CLOSE, FluentError);\n        return {type: \"select\", selector, ...variants};\n      }\n\n      throw new FluentError(\"Unclosed placeable\");\n    }\n\n    function parseInlineExpression() {\n      if (source[cursor] === \"{\") {\n        // It's a nested placeable.\n        return parsePlaceable();\n      }\n\n      if (test(RE_REFERENCE)) {\n        let [, sigil, name, attr = null] = match(RE_REFERENCE);\n\n        if (sigil === \"$\") {\n          return {type: \"var\", name};\n        }\n\n        if (consumeToken(TOKEN_PAREN_OPEN)) {\n          let args = parseArguments();\n\n          if (sigil === \"-\") {\n            // A parameterized term: -term(...).\n            return {type: \"term\", name, attr, args};\n          }\n\n          if (RE_FUNCTION_NAME.test(name)) {\n            return {type: \"func\", name, args};\n          }\n\n          throw new FluentError(\"Function names must be all upper-case\");\n        }\n\n        if (sigil === \"-\") {\n          // A non-parameterized term: -term.\n          return {type: \"term\", name, attr, args: []};\n        }\n\n        return {type: \"mesg\", name, attr};\n      }\n\n      return parseLiteral();\n    }\n\n    function parseArguments() {\n      let args = [];\n      while (true) {\n        switch (source[cursor]) {\n          case \")\": // End of the argument list.\n            cursor++;\n            return args;\n          case undefined: // EOF\n            throw new FluentError(\"Unclosed argument list\");\n        }\n\n        args.push(parseArgument());\n        // Commas between arguments are treated as whitespace.\n        consumeToken(TOKEN_COMMA);\n      }\n    }\n\n    function parseArgument() {\n      let expr = parseInlineExpression();\n      if (expr.type !== \"mesg\") {\n        return expr;\n      }\n\n      if (consumeToken(TOKEN_COLON)) {\n        // The reference is the beginning of a named argument.\n        return {type: \"narg\", name: expr.name, value: parseLiteral()};\n      }\n\n      // It's a regular message reference.\n      return expr;\n    }\n\n    function parseVariants() {\n      let variants = [];\n      let count = 0;\n      let star;\n\n      while (test(RE_VARIANT_START)) {\n        if (consumeChar(\"*\")) {\n          star = count;\n        }\n\n        let key = parseVariantKey();\n        let value = parsePattern();\n        if (value === null) {\n          throw new FluentError(\"Expected variant value\");\n        }\n        variants[count++] = {key, value};\n      }\n\n      if (count === 0) {\n        return null;\n      }\n\n      if (star === undefined) {\n        throw new FluentError(\"Expected default variant\");\n      }\n\n      return {variants, star};\n    }\n\n    function parseVariantKey() {\n      consumeToken(TOKEN_BRACKET_OPEN, FluentError);\n      let key = test(RE_NUMBER_LITERAL)\n        ? parseNumberLiteral()\n        : {type: \"str\", value: match1(RE_IDENTIFIER)};\n      consumeToken(TOKEN_BRACKET_CLOSE, FluentError);\n      return key;\n    }\n\n    function parseLiteral() {\n      if (test(RE_NUMBER_LITERAL)) {\n        return parseNumberLiteral();\n      }\n\n      if (source[cursor] === \"\\\"\") {\n        return parseStringLiteral();\n      }\n\n      throw new FluentError(\"Invalid expression\");\n    }\n\n    function parseNumberLiteral() {\n      let [, value, fraction = \"\"] = match(RE_NUMBER_LITERAL);\n      let precision = fraction.length;\n      return {type: \"num\", value: parseFloat(value), precision};\n    }\n\n    function parseStringLiteral() {\n      consumeChar(\"\\\"\", FluentError);\n      let value = \"\";\n      while (true) {\n        value += match1(RE_STRING_RUN);\n\n        if (source[cursor] === \"\\\\\") {\n          value += parseEscapeSequence();\n          continue;\n        }\n\n        if (consumeChar(\"\\\"\")) {\n          return {type: \"str\", value};\n        }\n\n        // We've reached an EOL of EOF.\n        throw new FluentError(\"Unclosed string literal\");\n      }\n    }\n\n    // Unescape known escape sequences.\n    function parseEscapeSequence() {\n      if (test(RE_STRING_ESCAPE)) {\n        return match1(RE_STRING_ESCAPE);\n      }\n\n      if (test(RE_UNICODE_ESCAPE)) {\n        let [, codepoint4, codepoint6] = match(RE_UNICODE_ESCAPE);\n        let codepoint = parseInt(codepoint4 || codepoint6, 16);\n        return codepoint <= 0xD7FF || 0xE000 <= codepoint\n          // It's a Unicode scalar value.\n          ? String.fromCodePoint(codepoint)\n          // Lonely surrogates can cause trouble when the parsing result is\n          // saved using UTF-8. Use U+FFFD REPLACEMENT CHARACTER instead.\n          : \"�\";\n      }\n\n      throw new FluentError(\"Unknown escape sequence\");\n    }\n\n    // Parse blank space. Return it if it looks like indent before a pattern\n    // line. Skip it othwerwise.\n    function parseIndent() {\n      let start = cursor;\n      consumeToken(TOKEN_BLANK);\n\n      // Check the first non-blank character after the indent.\n      switch (source[cursor]) {\n        case \".\":\n        case \"[\":\n        case \"*\":\n        case \"}\":\n        case undefined: // EOF\n          // A special character. End the Pattern.\n          return false;\n        case \"{\":\n          // Placeables don't require indentation (in EBNF: block-placeable).\n          // Continue the Pattern.\n          return makeIndent(source.slice(start, cursor));\n      }\n\n      // If the first character on the line is not one of the special characters\n      // listed above, it's a regular text character. Check if there's at least\n      // one space of indent before it.\n      if (source[cursor - 1] === \" \") {\n        // It's an indented text character (in EBNF: indented-char). Continue\n        // the Pattern.\n        return makeIndent(source.slice(start, cursor));\n      }\n\n      // A not-indented text character is likely the identifier of the next\n      // message. End the Pattern.\n      return false;\n    }\n\n    // Trim blanks in text according to the given regex.\n    function trim(text, re) {\n      return text.replace(re, \"\");\n    }\n\n    // Normalize a blank block and extract the indent details.\n    function makeIndent(blank) {\n      let value = blank.replace(RE_BLANK_LINES, \"\\n\");\n      let length = RE_INDENT.exec(blank)[1].length;\n      return {type: \"indent\", value, length};\n    }\n  }\n}\n",
    "static": true,
    "longname": "/c/Users/stas/Mozilla/fluent/fluent.js/fluent-bundle/src/resource.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "RE_MESSAGE_START",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~RE_MESSAGE_START",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "name": "RE_ATTRIBUTE_START",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~RE_ATTRIBUTE_START",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "name": "RE_VARIANT_START",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~RE_VARIANT_START",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "name": "RE_NUMBER_LITERAL",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~RE_NUMBER_LITERAL",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "RE_IDENTIFIER",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~RE_IDENTIFIER",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "variable",
    "name": "RE_REFERENCE",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~RE_REFERENCE",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 92,
    "kind": "variable",
    "name": "RE_FUNCTION_NAME",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~RE_FUNCTION_NAME",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "RE_TEXT_RUN",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~RE_TEXT_RUN",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "RE_STRING_RUN",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~RE_STRING_RUN",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "RE_STRING_ESCAPE",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~RE_STRING_ESCAPE",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "RE_UNICODE_ESCAPE",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~RE_UNICODE_ESCAPE",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "variable",
    "name": "RE_LEADING_NEWLINES",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~RE_LEADING_NEWLINES",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "RE_TRAILING_SPACES",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~RE_TRAILING_SPACES",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "variable",
    "name": "RE_BLANK_LINES",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~RE_BLANK_LINES",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 100,
    "kind": "variable",
    "name": "RE_INDENT",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~RE_INDENT",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "variable",
    "name": "TOKEN_BRACE_OPEN",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~TOKEN_BRACE_OPEN",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "TOKEN_BRACE_CLOSE",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~TOKEN_BRACE_CLOSE",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "variable",
    "name": "TOKEN_BRACKET_OPEN",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~TOKEN_BRACKET_OPEN",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 104,
    "kind": "variable",
    "name": "TOKEN_BRACKET_CLOSE",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~TOKEN_BRACKET_CLOSE",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 105,
    "kind": "variable",
    "name": "TOKEN_PAREN_OPEN",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~TOKEN_PAREN_OPEN",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "TOKEN_ARROW",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~TOKEN_ARROW",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "name": "TOKEN_COLON",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~TOKEN_COLON",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "TOKEN_COMMA",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~TOKEN_COMMA",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 109,
    "kind": "variable",
    "name": "TOKEN_BLANK",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~TOKEN_BLANK",
    "access": "public",
    "export": false,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 110,
    "kind": "class",
    "name": "FluentResource",
    "memberof": "src/resource.js",
    "static": true,
    "longname": "src/resource.js~FluentResource",
    "access": "public",
    "export": true,
    "importPath": "@fluent/bundle/src/resource.js",
    "importStyle": "FluentResource",
    "description": "Fluent Resource is a structure storing parsed localization entries.",
    "lineNumber": 54,
    "interface": false
  },
  {
    "__docId__": 111,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/resource.js~FluentResource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/resource.js~FluentResource#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true
  },
  {
    "__docId__": 112,
    "kind": "member",
    "name": "body",
    "memberof": "src/resource.js~FluentResource",
    "static": false,
    "longname": "src/resource.js~FluentResource#body",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/resource.js~FluentResource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/resource.js~FluentResource#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "src/scope.js",
    "content": "export default class Scope {\n  constructor(bundle, errors, args) {\n    /** The bundle for which the given resolution is happening. */\n    this.bundle = bundle;\n    /** The list of errors collected while resolving. */\n    this.errors = errors;\n    /** A dict of developer-provided variables. */\n    this.args = args;\n\n    /** The Set of patterns already encountered during this resolution.\n      * Used to detect and prevent cyclic resolutions. */\n    this.dirty = new WeakSet();\n    /** A dict of parameters passed to a TermReference. */\n    this.params = null;\n    /** The running count of placeables resolved so far. Used to detect the\n      * Billion Laughs and Quadratic Blowup attacks. */\n    this.placeables = 0;\n  }\n\n  reportError(error) {\n    if (!this.errors) {\n      throw error;\n    }\n    this.errors.push(error);\n  }\n\n  memoizeIntlObject(ctor, opts) {\n    let cache = this.bundle._intls.get(ctor);\n    if (!cache) {\n      cache = {};\n      this.bundle._intls.set(ctor, cache);\n    }\n    let id = JSON.stringify(opts);\n    if (!cache[id]) {\n      cache[id] = new ctor(this.bundle.locales, opts);\n    }\n    return cache[id];\n  }\n}\n",
    "static": true,
    "longname": "/c/Users/stas/Mozilla/fluent/fluent.js/fluent-bundle/src/scope.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "class",
    "name": "Scope",
    "memberof": "src/scope.js",
    "static": true,
    "longname": "src/scope.js~Scope",
    "access": "public",
    "export": true,
    "importPath": "@fluent/bundle/src/scope.js",
    "importStyle": "Scope",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 116,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/scope.js~Scope",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/scope.js~Scope#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "bundle",
    "memberof": "src/scope.js~Scope",
    "static": false,
    "longname": "src/scope.js~Scope#bundle",
    "access": "public",
    "description": "The bundle for which the given resolution is happening.",
    "lineNumber": 4,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "member",
    "name": "errors",
    "memberof": "src/scope.js~Scope",
    "static": false,
    "longname": "src/scope.js~Scope#errors",
    "access": "public",
    "description": "The list of errors collected while resolving.",
    "lineNumber": 6,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "member",
    "name": "args",
    "memberof": "src/scope.js~Scope",
    "static": false,
    "longname": "src/scope.js~Scope#args",
    "access": "public",
    "description": "A dict of developer-provided variables.",
    "lineNumber": 8,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "member",
    "name": "dirty",
    "memberof": "src/scope.js~Scope",
    "static": false,
    "longname": "src/scope.js~Scope#dirty",
    "access": "public",
    "description": "The Set of patterns already encountered during this resolution.\nUsed to detect and prevent cyclic resolutions.",
    "lineNumber": 12,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "member",
    "name": "params",
    "memberof": "src/scope.js~Scope",
    "static": false,
    "longname": "src/scope.js~Scope#params",
    "access": "public",
    "description": "A dict of parameters passed to a TermReference.",
    "lineNumber": 14,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "member",
    "name": "placeables",
    "memberof": "src/scope.js~Scope",
    "static": false,
    "longname": "src/scope.js~Scope#placeables",
    "access": "public",
    "description": "The running count of placeables resolved so far. Used to detect the\nBillion Laughs and Quadratic Blowup attacks.",
    "lineNumber": 17,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "reportError",
    "memberof": "src/scope.js~Scope",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/scope.js~Scope#reportError",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "error",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "memoizeIntlObject",
    "memberof": "src/scope.js~Scope",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/scope.js~Scope#memoizeIntlObject",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "ctor",
        "types": [
          "*"
        ]
      },
      {
        "name": "opts",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "file",
    "name": "src/types.js",
    "content": "/* global Intl */\n\n/**\n * The `FluentType` class is the base of Fluent's type system.\n *\n * Fluent types wrap JavaScript values and store additional configuration for\n * them, which can then be used in the `toString` method together with a proper\n * `Intl` formatter.\n */\nexport class FluentType {\n  /**\n   * Create a `FluentType` instance.\n   *\n   * @param   {Any} value - JavaScript value to wrap.\n   * @returns {FluentType}\n   */\n  constructor(value) {\n    /** The wrapped native value. */\n    this.value = value;\n  }\n\n  /**\n   * Unwrap the raw value stored by this `FluentType`.\n   *\n   * @returns {Any}\n   */\n  valueOf() {\n    return this.value;\n  }\n\n  /**\n   * Format this instance of `FluentType` to a string.\n   *\n   * Formatted values are suitable for use outside of the `FluentBundle`.\n   * This method can use `Intl` formatters available through the `scope`\n   * argument.\n   *\n   * @abstract\n   * @param   {Scope} scope\n   * @returns {string}\n   */\n  toString(scope) { // eslint-disable-line no-unused-vars\n    throw new Error(\"Subclasses of FluentType must implement toString.\");\n  }\n}\n\n/**\n * A `FluentType` representing no correct value.\n */\nexport class FluentNone extends FluentType {\n  /**\n   * Create an instance of `FluentNone` with an optional fallback value.\n   * @param   {string} value - The fallback value of this `FluentNone`.\n   * @returns {FluentType}\n   */\n  constructor(value = \"???\") {\n    super(value);\n  }\n\n  /**\n   * Format this `FluentNone` to the fallback string.\n   * @returns {string}\n   */\n  toString() {\n    return `{${this.value}}`;\n  }\n}\n\n/**\n * A `FluentType` representing a number.\n */\nexport class FluentNumber extends FluentType {\n  /**\n   * Create an instance of `FluentNumber` with options to the\n   * `Intl.NumberFormat` constructor.\n   * @param   {number} value\n   * @param   {Intl.NumberFormatOptions} opts\n   * @returns {FluentType}\n   */\n  constructor(value, opts) {\n    super(value);\n    /** Options passed to Intl.NumberFormat. */\n    this.opts = opts;\n  }\n\n  /**\n   * Format this `FluentNumber` to a string.\n   * @param   {Scope} scope\n   * @returns {string}\n   */\n  toString(scope) {\n    try {\n      const nf = scope.memoizeIntlObject(Intl.NumberFormat, this.opts);\n      return nf.format(this.value);\n    } catch (err) {\n      scope.reportError(err);\n      return this.value.toString(10);\n    }\n  }\n}\n\n/**\n * A `FluentType` representing a date and time.\n */\nexport class FluentDateTime extends FluentType {\n  /**\n   * Create an instance of `FluentDateTime` with options to the\n   * `Intl.DateTimeFormat` constructor.\n   * @param   {number} value - timestamp in milliseconds\n   * @param   {Intl.DateTimeFormatOptions} opts\n   * @returns {FluentType}\n   */\n  constructor(value, opts) {\n    super(value);\n    /** Options passed to Intl.DateTimeFormat. */\n    this.opts = opts;\n  }\n\n  /**\n   * Format this `FluentDateTime` to a string.\n   * @param   {Scope} scope\n   * @returns {string}\n   */\n  toString(scope) {\n    try {\n      const dtf = scope.memoizeIntlObject(Intl.DateTimeFormat, this.opts);\n      return dtf.format(this.value);\n    } catch (err) {\n      scope.reportError(err);\n      return (new Date(this.value)).toISOString();\n    }\n  }\n}\n",
    "static": true,
    "longname": "/c/Users/stas/Mozilla/fluent/fluent.js/fluent-bundle/src/types.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 126,
    "kind": "class",
    "name": "FluentType",
    "memberof": "src/types.js",
    "static": true,
    "longname": "src/types.js~FluentType",
    "access": "public",
    "export": true,
    "importPath": "@fluent/bundle/src/types.js",
    "importStyle": "{FluentType}",
    "description": "The `FluentType` class is the base of Fluent's type system.\n\nFluent types wrap JavaScript values and store additional configuration for\nthem, which can then be used in the `toString` method together with a proper\n`Intl` formatter.",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 127,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/types.js~FluentType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/types.js~FluentType#constructor",
    "access": "public",
    "description": "Create a `FluentType` instance.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{FluentType}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "JavaScript value to wrap."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FluentType"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 128,
    "kind": "member",
    "name": "value",
    "memberof": "src/types.js~FluentType",
    "static": false,
    "longname": "src/types.js~FluentType#value",
    "access": "public",
    "description": "The wrapped native value.",
    "lineNumber": 19,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "valueOf",
    "memberof": "src/types.js~FluentType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/types.js~FluentType#valueOf",
    "access": "public",
    "description": "Unwrap the raw value stored by this `FluentType`.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Any}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Any"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "toString",
    "memberof": "src/types.js~FluentType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/types.js~FluentType#toString",
    "access": "public",
    "description": "Format this instance of `FluentType` to a string.\n\nFormatted values are suitable for use outside of the `FluentBundle`.\nThis method can use `Intl` formatters available through the `scope`\nargument.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Scope"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 131,
    "kind": "class",
    "name": "FluentNone",
    "memberof": "src/types.js",
    "static": true,
    "longname": "src/types.js~FluentNone",
    "access": "public",
    "export": true,
    "importPath": "@fluent/bundle/src/types.js",
    "importStyle": "{FluentNone}",
    "description": "A `FluentType` representing no correct value.",
    "lineNumber": 50,
    "interface": false,
    "extends": [
      "FluentType"
    ]
  },
  {
    "__docId__": 132,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/types.js~FluentNone",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/types.js~FluentNone#constructor",
    "access": "public",
    "description": "Create an instance of `FluentNone` with an optional fallback value.",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{FluentType}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The fallback value of this `FluentNone`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FluentType"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "toString",
    "memberof": "src/types.js~FluentNone",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/types.js~FluentNone#toString",
    "access": "public",
    "description": "Format this `FluentNone` to the fallback string.",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 134,
    "kind": "class",
    "name": "FluentNumber",
    "memberof": "src/types.js",
    "static": true,
    "longname": "src/types.js~FluentNumber",
    "access": "public",
    "export": true,
    "importPath": "@fluent/bundle/src/types.js",
    "importStyle": "{FluentNumber}",
    "description": "A `FluentType` representing a number.",
    "lineNumber": 72,
    "interface": false,
    "extends": [
      "FluentType"
    ]
  },
  {
    "__docId__": 135,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/types.js~FluentNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/types.js~FluentNumber#constructor",
    "access": "public",
    "description": "Create an instance of `FluentNumber` with options to the\n`Intl.NumberFormat` constructor.",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{FluentType}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Intl.NumberFormatOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FluentType"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 136,
    "kind": "member",
    "name": "opts",
    "memberof": "src/types.js~FluentNumber",
    "static": false,
    "longname": "src/types.js~FluentNumber#opts",
    "access": "public",
    "description": "Options passed to Intl.NumberFormat.",
    "lineNumber": 83,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "toString",
    "memberof": "src/types.js~FluentNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/types.js~FluentNumber#toString",
    "access": "public",
    "description": "Format this `FluentNumber` to a string.",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Scope"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 138,
    "kind": "class",
    "name": "FluentDateTime",
    "memberof": "src/types.js",
    "static": true,
    "longname": "src/types.js~FluentDateTime",
    "access": "public",
    "export": true,
    "importPath": "@fluent/bundle/src/types.js",
    "importStyle": "{FluentDateTime}",
    "description": "A `FluentType` representing a date and time.",
    "lineNumber": 105,
    "interface": false,
    "extends": [
      "FluentType"
    ]
  },
  {
    "__docId__": 139,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/types.js~FluentDateTime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/types.js~FluentDateTime#constructor",
    "access": "public",
    "description": "Create an instance of `FluentDateTime` with options to the\n`Intl.DateTimeFormat` constructor.",
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{FluentType}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "timestamp in milliseconds"
      },
      {
        "nullable": null,
        "types": [
          "Intl.DateTimeFormatOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FluentType"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 140,
    "kind": "member",
    "name": "opts",
    "memberof": "src/types.js~FluentDateTime",
    "static": false,
    "longname": "src/types.js~FluentDateTime#opts",
    "access": "public",
    "description": "Options passed to Intl.DateTimeFormat.",
    "lineNumber": 116,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "toString",
    "memberof": "src/types.js~FluentDateTime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/types.js~FluentDateTime#toString",
    "access": "public",
    "description": "Format this `FluentDateTime` to a string.",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Scope"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "kind": "index",
    "content": "# @fluent/bundle\n\n`@fluent/bundle` is a JavaScript implementation of Project Fluent, a\nlocalization framework designed to unleash the expressive power of the\nnatural language.\n\n\n## Installation\n\n`@fluent/bundle` can be used both on the client-side and the server-side. You\ncan install it from the npm registry or use it as a standalone script (as the\n`FluentBundle` global).\n\n    npm install @fluent/bundle\n\n\n## How to use\n\nThe `FluentBundle` constructor provides the core functionality of formatting\ntranslations from FTL files.\n\n```javascript\nimport {FluentBundle, FluentResource} from \"@fluent/bundle\";\n\nlet resource = new FluentResource(`\n-brand-name = Foo 3000\nwelcome = Welcome, {$name}, to {-brand-name}!\n`);\n\nlet bundle = new FluentBundle(\"en-US\");\nlet errors = bundle.addResource(resource);\nif (errors.length) {\n    // Syntax errors are per-message and don't break the whole resource\n}\n\nlet welcome = bundle.getMessage(\"welcome\");\nif (welcome.value) {\n    bundle.formatPattern(welcome.value, {name: \"Anna\"});\n    // → \"Welcome, Anna, to Foo 3000!\"\n}\n```\n\nThe API reference is available at https://projectfluent.org/fluent.js/bundle.\n\n\n## Compatibility\n\n`fluent` requires the following `Intl` formatters:\n\n  - `Intl.DateTimeFormat` (standard, well-supported)\n  - `Intl.NumberFormat` (standard, well-supported)\n  - `Intl.PluralRules` (standard, new in ECMAScript 2018)\n\n`Intl.PluralRules` may already be available in some engines.  In most cases,\nhowever, a polyfill will be required.  We recommend [intl-pluralrules][].\n\n```javascript\nimport 'intl-pluralrules';\nimport {FluentBundle} from '@fluent/bundle';\n```\n\nFor legacy browsers, the `compat` build has been transpiled using Babel's [env\npreset][]. It requires the regenerator runtime provided by [babel-polyfill][].\n\n```javascript\nimport {FluentBundle} from '@fluent/bundle/compat';\n```\n\n\n## Learn more\n\nFind out more about Project Fluent at [projectfluent.org][], including\ndocumentation of the Fluent file format ([FTL][]), links to other packages and\nimplementations, and information about how to get involved.\n\n\n[intl-pluralrules]: https://www.npmjs.com/package/intl-pluralrules\n[babel-polyfill]: https://babeljs.io/docs/usage/polyfill/\n[Stage 3 proposal]:https://github.com/tc39/proposal-intl-plural-rules\n[env preset]: https://babeljs.io/docs/plugins/preset-env/\n[projectfluent.org]: https://projectfluent.org\n[FTL]: https://projectfluent.org/fluent/guide/\n",
    "longname": "/c/Users/stas/Mozilla/fluent/fluent.js/fluent-bundle/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@fluent/bundle\",\n  \"description\": \"Localization library for expressive translations.\",\n  \"version\": \"0.14.1\",\n  \"homepage\": \"https://projectfluent.org\",\n  \"author\": \"Mozilla <l10n-drivers@mozilla.org>\",\n  \"license\": \"Apache-2.0\",\n  \"contributors\": [\n    {\n      \"name\": \"Zibi Braniecki\",\n      \"email\": \"zbraniecki@mozilla.com\"\n    },\n    {\n      \"name\": \"Staś Małolepszy\",\n      \"email\": \"stas@mozilla.com\"\n    }\n  ],\n  \"directories\": {\n    \"lib\": \"./src\"\n  },\n  \"main\": \"./index.js\",\n  \"module\": \"./src/index.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/projectfluent/fluent.js.git\"\n  },\n  \"keywords\": [\n    \"localization\",\n    \"l10n\",\n    \"internationalization\",\n    \"i18n\",\n    \"ftl\",\n    \"plural\",\n    \"gender\",\n    \"locale\",\n    \"language\",\n    \"formatting\",\n    \"translate\",\n    \"translation\",\n    \"format\",\n    \"parser\"\n  ],\n  \"engines\": {\n    \"node\": \">=8.9.0\"\n  },\n  \"devDependencies\": {\n    \"@fluent/dedent\": \"^0.1.0\",\n    \"sinon\": \"^4.2.2\"\n  }\n}\n",
    "longname": "/c/Users/stas/Mozilla/fluent/fluent.js/fluent-bundle/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]